#!/bin/sh
# fossyspdx-cleanold - a utility to clean up old FOSSology+SPDX installs
# Copyright (C) 2013 University of Nebraska at Omaha.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the Apache License, Version 2.0
# as published by the Apache Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Apache License for more details.
# 
# You should have received a copy of the Apache License along
# with this program; if not, contact to the Apache Software Foundation.

## Options parsing and setup
# parse options
OPTS=`getopt -o h --long delete-conffiles,delete-database,delete-outputdir,delete-everything,help -n 'fossyspdx-cleanold' -- "$@"`

if [ $? != 0 ]; then
   echo "ERROR: Bad option specified."
   OPTS="--help"
fi

eval set -- "$OPTS"

# if no options or just -o then do everything
if [ "$OPTS" = " --" -o "$OPTS" = " -o --" ]; then
   EVERYTHING=1
fi

while true; do
case "$1" in
      --delete-conffiles) RMCONF=1; shift;;
      --delete-database) RMDB=1; shift;;
      --delete-outputdir) RMREPO=1; shift;;
      --delete-everything) EVERYTHING=1; shift;;
      -h|--help)
         echo "Usage: fossyspdx-cleanold [options]";
         echo " By default fossyspdx-cleanold does not delete any data, but you can specify"
         echo " additional options that WILL DELETE DATA, please use with caution."
         echo "  --delete-conffiles  : delete configuration files"
         echo "  --delete-database   : delete database"
         echo "  --delete-outputdir  : delete temporary output folder"
         echo "  --delete-everything : delete everything"
         echo "  -h or --help        : this help text"
         exit;;
      --) shift; break;;
      *) echo "Error: option $1 not recognised"; exit 1;;
   esac
done

if [ $EVERYTHING ]; then
   echo "*** Deleting everything ***"
   RMCONF=1
   RMDB=1
   RMREPO=1
fi


# This must run as root.
if [ `id -u` != "0" ] ; then
   echo "ERROR: fossyspdx-cleanold must run as root."
   echo "Aborting."
   exit 1
fi

## Files
FILES="
/etc/fossology/fossologyspdx.conf
/usr/local/etc/fossology/fossologyspdx.conf
/usr/etc/fossology/fossologyspdx.conf
/usr/lib/fossology/fossyspdxinit.php
/usr/lib/fossology/fossyspdx-postinstall
"

DIRS="/usr/local/fossology/spdx
/usr/share/fossology/spdx
/etc/fossology/mods-enabled/spdx
/usr/local/etc/fossology/mods-enabled/spdx
"
if [ $RMCONF ]; then
	TMPDIR=`mktemp -d /tmp/fossologyspdx-configs.XXXXXX` || exit 1
	echo "*** Searching for old fossology+spdx config files ***"
	for conffile in $FILES; do
	   if [ -e "$conffile" -o -L "$conffile" ]; then
	      echo "NOTE: found old $conffile saving to $TMPDIR/ and deleting"
	      cp $conffile $TMPDIR/
	      rm -f $conffile
	   fi
	done

	for dir in $DIRS; do
	   if [ -d "$dir" -o -L "$dir" ]; then
	      rm -rf $dir
	   fi
	done
fi
## Database
if [ $RMDB ]; then
   # first check that the db is running
   su postgres -c 'echo \\q|psql'
   if [ $? != 0 ]; then
      echo "ERROR: postgresql isn't running, not deleting database table"
   else
      # and next that the db exists
      su postgres -c 'psql -l' |grep -q fossology
      if [ $? = 0 ]; then
      	# then check to see if the table already exists
				su postgres -c "psql fossology -c \"select * from information_schema.tables where table_name like 'spdx%';\""|grep spdx
				if [ $? = 0 ]; then
					echo "*** Deleting database table ***"
					# stop all tables of spdx in fossology db
					# pkill -f -u postgres fossy || true
					su postgres -c "psql fossology -c \"drop table spdx_extracted_lic_info,spdx_file,spdx_file_info,spdx_license_list,spdx_package_info,spdx_review_ref;\""
					if [ $? != 0 ]; then
					  echo "ERROR: failed to delete database tables"
					  exit 1
					fi
       else
       		echo "NOTE: spdx tables does not exist, so not deleting"
       fi
      else
         echo "NOTE: spdx tables does not exist in fossology database, not deleting"
      fi
   fi
fi

## Temporary output folder
if [ $RMREPO ]; then
   echo "*** Deleting temporary output folder ***"
   if [ -d /tmp/fossologyspdx ]; then
      rm -rf /tmp/fossologyspdx
      if [ $? != 0 ]; then
         echo "ERROR: failed to delete temporary output folder"
         exit 1
      fi
   else
      echo "NOTE: Temporary output folder does not exist, so not deleting"
   fi
fi
